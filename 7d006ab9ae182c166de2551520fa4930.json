{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\WhitehatWork\\\\Abhigna WHJR\\\\CLASS-78\\\\screens\\\\IssLocation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport MapView, { Marker } from 'react-native-maps';\n\nvar IssLocationScreen = function (_Component) {\n  _inherits(IssLocationScreen, _Component);\n\n  var _super = _createSuper(IssLocationScreen);\n\n  function IssLocationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, IssLocationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getIssLocation = function () {\n      axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(function (response) {\n        _this.setState({\n          location: response.data\n        });\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    };\n\n    _this.state = {\n      location: {}\n    };\n    return _this;\n  }\n\n  _createClass(IssLocationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getIssLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Object.keys(this.state.location).length === 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, \"Loading\"));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }), React.createElement(ImageBackground, {\n          source: require(\"../assets/bg.png\"),\n          style: styles.backgroundImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.titleContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, \"ISS Location\")), React.createElement(View, {\n          style: styles.mapContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, React.createElement(MapView, {\n          styles: styles.map,\n          region: {\n            latitude: this.state.location.latitude,\n            longitude: this.state.location.longitude,\n            latitudeDelta: 100,\n            longitudeDelta: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }\n        }, React.createElement(Marker, {\n          coordinate: {\n            latitude: this.state.location.latitude,\n            longitude: this.state.location.longitude\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/iss_icon.png\"),\n          style: {\n            height: 50,\n            width: 50\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }))))));\n      }\n    }\n  }]);\n\n  return IssLocationScreen;\n}(Component);\n\nexport { IssLocationScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  titleContainer: {\n    flex: 0.1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleText: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  mapContainer: {\n    flex: 0.6\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["C:/WhitehatWork/Abhigna WHJR/CLASS-78/screens/IssLocation.js"],"names":["axios","React","Component","MapView","Marker","IssLocationScreen","props","getIssLocation","get","then","response","setState","location","data","catch","error","alert","message","state","Object","keys","length","flex","justifyContent","alignItems","styles","container","droidSafeArea","require","backgroundImage","titleContainer","titleText","mapContainer","map","latitude","longitude","latitudeDelta","longitudeDelta","height","width","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","resizeMode","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport {\n    Text,\n    View,\n    StyleSheet,\n    ImageBackground,\n    StatusBar,\n    SafeAreaView,\n    Platform,\n\n} from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\nexport default class IssLocationScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n        }\n    }\n    componentDidMount() {\n        this.getIssLocation()\n    }\n    getIssLocation = () => {\n        axios\n            .get(\"https://api.wheretheiss.at/v1/satellites/25544\")\n            .then(response => {\n                this.setState({ location: response.data })\n            })\n            .catch(error => {\n                alert(error.message)\n            })\n    }\n    render() {\n        if (Object.keys(this.state.location).length === 0) {\n            return (<View style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n            }}>\n                <Text>Loading</Text>\n            </View>\n            )\n        }\n        else {\n            return (\n                <View style={styles.container}>\n                    <SafeAreaView style={styles.droidSafeArea} />\n                    <ImageBackground source={require('../assets/bg.png')} style={styles.backgroundImage}>\n                        <View style={styles.titleContainer}>\n                            <Text style={styles.titleText}>ISS Location</Text>\n                        </View>\n                        <View style={styles.mapContainer}>\n                            <MapView styles={styles.map}\n                                region={{\n                                    latitude: this.state.location.latitude,\n                                    longitude: this.state.location.longitude,\n                                    latitudeDelta: 100,\n                                    longitudeDelta: 100\n                                }}>\n                                <Marker coordinate={{ latitude: this.state.location.latitude, longitude: this.state.location.longitude }} >\n                                    <Image source={require('../assets/iss_icon.png')} style={{ height: 50, width: 50 }} />\n                                </Marker>\n\n                            </MapView>\n\n                        </View>\n                    </ImageBackground>\n                </View>\n            )\n        }\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    droidSafeArea: {\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n    },\n    backgroundImage: {\n        flex: 1,\n        resizeMode: 'cover',\n    },\n    titleContainer: {\n        flex: 0.1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    titleText: {\n        fontSize: 30,\n        fontWeight: \"bold\",\n        color: \"white\"\n    },\n    mapContainer: {\n        flex: 0.6,\n\n    },\n    map: {\n        width: \"100%\",\n        height: \"100%\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}